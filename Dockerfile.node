# Stage 1: Build the application
FROM node:16-alpine AS builder

# Set the working directory inside the container
WORKDIR /app

RUN apk add --no-cache python3 make g++

# Copy yarn.lock to install dependencies
COPY package*.json ./
COPY yarn.lock ./

# Install dependencies
RUN yarn

# Copy the rest of the application code
COPY . .


# Build the application
RUN npx nx build server

# Stage 2: Run the application
FROM node:16-alpine

# Set the working directory inside the container
WORKDIR /app

# Copy the generated package.json and yarn.lock from the builder stage
COPY --from=builder /app/dist/apps/server/package*.json ./

# Install only the production dependencies
RUN yarn install --production --frozen-lockfile

# Copy the built application code from the builder stage
COPY --from=builder /app/dist/apps/server ./

# Expose the port the app runs on
EXPOSE 3000

# Command to run the application
CMD ["node", "main.js"]
